package com.cg.appointment.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cg.appointment.DTO.AppointmentDTO;
import com.cg.appointment.entity.Appointment;
import com.cg.appointment.repository.AppointmentRepository;

@Service
public class AppointmentService implements IAppointmentService{
	
	@Autowired
	AppointmentRepository appointmentrepository;
	@Override
	public List<Appointment> findAllAppointment() {

		
		return appointmentrepository.findAll();
	}
	
	@Override
	public Appointment createAppointment(Appointment d) {
		// TODO Auto-generated method stub
		return appointmentrepository.save(d);
	}
	@Override
	public void deleteByIdAppointment( int id) {
		// TODO Auto-generated method stub
		appointmentrepository.deleteById(id);
		 
	}
	
	@Override
	public Appointment updateAppointment(Appointment apt,int id) {
		// TODO Auto-generated method stub
		Optional<Appointment> ord= findAppointmentByID(id);
		Appointment or=ord.get();
		
		or.setAid(apt.getAid());
		or.setDate(apt.getDate());
//		or.setDid(apt.getDid());
//		or.setPid(apt.getPid());
		or.setFees(apt.getFees());
		
		or.setIssue(apt.getIssue());
		or.setStatus(apt.getStatus());
		
		return appointmentrepository.save(or);
	}
	
	@Override
	public Optional<Appointment> findAppointmentByID(int id) {
		return appointmentrepository.findById(id);
	}
	

	
	public AppointmentDTO getAppointmentWithDoctorAndPatient(int appointmentId) {
	     
        Appointment appointment = appointmentrepository.findById(appointmentId)
                .orElseThrow(() -> new RuntimeException("Appointment not found with id " + appointmentId));
 
        
        DoctorDTO doctor = doctorClient.getByDoctorId(appointment.getdId());
        PatientDTO patient=patientClient.findByPatientId(appointment.getpId());
        
        AppointmentDTO appDTO = new AppointmentDTO();
        appDTO.setAid(appointment.getId());
        appDTO.setTime(appointment.getTime());
        appDTO.setDate(appointment.getDate());
        appDTO.setIssue(appointment.getIssue());
        appDTO.setStatus(appointment.getStatus());
        appDTO.setFees(appointment.getFees());
        appDTO.setDoctor(doctor);
        appDTO.setPatient(patient);
 
        return appDTO;
 
 
}
}
